name: Daily Release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:

    
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

        
    - name: Calculate Version
      id: calc_version
      run: |
        YEAR=$(date +"%Y")
        MONTH=$(date +"%m")
        COUNT=$(git tag | grep "^v$YEAR\.$MONTH\." | wc -l | xargs)
        NEW_TAG="v$YEAR.$MONTH.$COUNT"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        echo "New version: $NEW_TAG"

        
    - name: Check for changes
      run: |
        if git rev-parse --verify --quiet "refs/tags"; then
          LAST_TAG=$(git describe --tags --abbrev=0)
        else
          LAST_TAG=""
        fi
        
        if [ -n "$LAST_TAG" ]; then
          CHANGES=$(git diff --name-only $LAST_TAG..HEAD)
          if [ -z "$CHANGES" ]; then
            echo "No changes since last tag."
            echo "CHANGES_EXIST=false" >> $GITHUB_ENV
          else
            echo "Changes detected."
            echo "CHANGES_EXIST=true" >> $GITHUB_ENV
          fi
        else
          echo "No tags found, assuming changes."
          echo "CHANGES_EXIST=true" >> $GITHUB_ENV
        fi


    - name: Set up GitHub CLI
      run: gh auth setup-git
      env:
        GH_TOKEN: ${{ secrets.DAILY_RELEASE_ACCESS_TOKEN }}

        
    - name: Create Release
      run: |
        if [ "${{ env.CHANGES_EXIST }}" = "true" ]; then
          gh release create $NEW_TAG --generate-notes
        else
          echo "No changes detected, skipping release."
        fi
      env:
          GH_TOKEN: ${{ secrets.DAILY_RELEASE_ACCESS_TOKEN }}
