-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Graph.Object.HistoryQuery exposing (..)

import Api.ScalarCodecs
import Graph.InputObject
import Graph.Interface
import Graph.Object
import Graph.Scalar
import Graph.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias HistoryItemsOptionalArguments =
    { from : OptionalArgument Api.ScalarCodecs.Timestamp
    , to : OptionalArgument Api.ScalarCodecs.Timestamp
    , limit : OptionalArgument Int
    }


{-| Returns the history of the user's activity.

`limit` can be used to limit the number of history items returned.
If `limit` is not provided, no limit will be applied.

When neither `from` nor `to` is provided, the fist entry will be the newest one.
All entries will be sorted by the `start` timestamp in descending order.

When only `from` is provided, entries with the same, a later or no `end` timestamp will be returned.
This time they are sorted by the `start` timestamp in ascending order.

When only `to` is provided, entries with the same or an earlier start timestamp will be returned.
This time they are sorted by the `start` timestamp in descending order.

When both `from` and `to` are provided, entries which overlap the range will be returned.
This time they are sorted by the `start` timestamp in ascending order.

-}
historyItems :
    (HistoryItemsOptionalArguments -> HistoryItemsOptionalArguments)
    -> SelectionSet decodesTo Graph.Object.HistoryItem
    -> SelectionSet (List decodesTo) Graph.Object.HistoryQuery
historyItems fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { from = Absent, to = Absent, limit = Absent }

        optionalArgs____ =
            [ Argument.optional "from" filledInOptionals____.from (Api.ScalarCodecs.codecs |> Graph.Scalar.unwrapEncoder .codecTimestamp), Argument.optional "to" filledInOptionals____.to (Api.ScalarCodecs.codecs |> Graph.Scalar.unwrapEncoder .codecTimestamp), Argument.optional "limit" filledInOptionals____.limit Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "historyItems" optionalArgs____ object____ (Basics.identity >> Decode.list)
